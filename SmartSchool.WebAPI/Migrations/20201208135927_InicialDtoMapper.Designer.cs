// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(SmartSchoolContext))]
    [Migration("20201208135927_InicialDtoMapper")]
    partial class InicialDtoMapper
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Aluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlunoAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("MatriculaAluno")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("SobrenomeAluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneAluno")
                        .HasColumnType("TEXT");

                    b.HasKey("IdAluno");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            IdAluno = 1,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(3966),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 1,
                            NomeAluno = "Marta",
                            SobrenomeAluno = "Kent",
                            TelefoneAluno = "33225555"
                        },
                        new
                        {
                            IdAluno = 2,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5770),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 2,
                            NomeAluno = "Paula",
                            SobrenomeAluno = "Isabela",
                            TelefoneAluno = "3354288"
                        },
                        new
                        {
                            IdAluno = 3,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5834),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 3,
                            NomeAluno = "Laura",
                            SobrenomeAluno = "Antonia",
                            TelefoneAluno = "55668899"
                        },
                        new
                        {
                            IdAluno = 4,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5841),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 4,
                            NomeAluno = "Luiza",
                            SobrenomeAluno = "Maria",
                            TelefoneAluno = "6565659"
                        },
                        new
                        {
                            IdAluno = 5,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5846),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 5,
                            NomeAluno = "Lucas",
                            SobrenomeAluno = "Machado",
                            TelefoneAluno = "565685415"
                        },
                        new
                        {
                            IdAluno = 6,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5857),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 6,
                            NomeAluno = "Pedro",
                            SobrenomeAluno = "Alvares",
                            TelefoneAluno = "456454545"
                        },
                        new
                        {
                            IdAluno = 7,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(5861),
                            DataNascimento = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MatriculaAluno = 7,
                            NomeAluno = "Paulo",
                            SobrenomeAluno = "José",
                            TelefoneAluno = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoCurso", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunosCursos");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(7427)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8344)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8381)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8383)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8384)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8389)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8391)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8392)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8394)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8397)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8398)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8399)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8401)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8402)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8404)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8405)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8407)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8410)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8411)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8413)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8414)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8415)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 970, DateTimeKind.Local).AddTicks(8417)
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            IdCurso = 1,
                            NomeCurso = "Tecnologia da Informação"
                        },
                        new
                        {
                            IdCurso = 2,
                            NomeCurso = "Sistemas de Informação"
                        },
                        new
                        {
                            IdCurso = 3,
                            NomeCurso = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Disciplina", b =>
                {
                    b.Property<int>("IdDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeDisciplina")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PrerequisitoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDisciplina");

                    b.HasIndex("CursoId");

                    b.HasIndex("PrerequisitoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            IdDisciplina = 1,
                            CargaHoraria = 0,
                            CursoId = 1,
                            NomeDisciplina = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            IdDisciplina = 2,
                            CargaHoraria = 0,
                            CursoId = 3,
                            NomeDisciplina = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            IdDisciplina = 3,
                            CargaHoraria = 0,
                            CursoId = 3,
                            NomeDisciplina = "Física",
                            ProfessorId = 2
                        },
                        new
                        {
                            IdDisciplina = 4,
                            CargaHoraria = 0,
                            CursoId = 1,
                            NomeDisciplina = "Português",
                            ProfessorId = 3
                        },
                        new
                        {
                            IdDisciplina = 5,
                            CargaHoraria = 0,
                            CursoId = 1,
                            NomeDisciplina = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            IdDisciplina = 6,
                            CargaHoraria = 0,
                            CursoId = 2,
                            NomeDisciplina = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            IdDisciplina = 7,
                            CargaHoraria = 0,
                            CursoId = 3,
                            NomeDisciplina = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            IdDisciplina = 8,
                            CargaHoraria = 0,
                            CursoId = 1,
                            NomeDisciplina = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            IdDisciplina = 9,
                            CargaHoraria = 0,
                            CursoId = 2,
                            NomeDisciplina = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            IdDisciplina = 10,
                            CargaHoraria = 0,
                            CursoId = 3,
                            NomeDisciplina = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Professor", b =>
                {
                    b.Property<int>("IdProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AlunoAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeProfessor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SobrenomeProfessor")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoneProfessor")
                        .HasColumnType("TEXT");

                    b.HasKey("IdProfessor");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            IdProfessor = 1,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 965, DateTimeKind.Local).AddTicks(7576),
                            NomeProfessor = "Lauro",
                            Registro = 1,
                            SobrenomeProfessor = "Oliveira"
                        },
                        new
                        {
                            IdProfessor = 2,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 966, DateTimeKind.Local).AddTicks(9701),
                            NomeProfessor = "Roberto",
                            Registro = 2,
                            SobrenomeProfessor = "Soares"
                        },
                        new
                        {
                            IdProfessor = 3,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 966, DateTimeKind.Local).AddTicks(9746),
                            NomeProfessor = "Ronaldo",
                            Registro = 3,
                            SobrenomeProfessor = "Marconi"
                        },
                        new
                        {
                            IdProfessor = 4,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 966, DateTimeKind.Local).AddTicks(9749),
                            NomeProfessor = "Rodrigo",
                            Registro = 4,
                            SobrenomeProfessor = "Carvalho"
                        },
                        new
                        {
                            IdProfessor = 5,
                            AlunoAtivo = true,
                            DataInicio = new DateTime(2020, 12, 8, 10, 59, 26, 966, DateTimeKind.Local).AddTicks(9751),
                            NomeProfessor = "Alexandre",
                            Registro = 5,
                            SobrenomeProfessor = "Montanha"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoCurso", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Aluno", "Aluno")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Disciplina", "Disciplina")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Disciplina", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Disciplina", "Prerequisito")
                        .WithMany()
                        .HasForeignKey("PrerequisitoId");

                    b.HasOne("SmartSchool.WebAPI.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
